name: 'Rails Unit Tests'

on:
  push:
    branches:
    - 'master'
    - 'feature/add_status_updates_to_actions'
    paths-ignore:
    - 'doc/**'
    - '**.md'
  pull_request:
    branches:
    - 'master'
    paths-ignore:
    - 'doc/**'
    - '**.md'

jobs:
  build:
    runs-on: 'ubuntu-latest'

    services:
      postgres:
        image: 'postgres:11'
        env:
          POSTGRES_PASSWORD: 'postgres'
        ports: [ '5432:5432' ]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
      memcached:
        image: 'memcached'
        ports: [ '11211:11211' ]

    env:
      REQUEST_URI: '${{ secrets.STATUS_URI }}/signal'
      REQUEST_DATA: '{ "application": "${{ secrets.STATUS_MASTER_APPLICATION }}", "token": "${{ secrets.STATUS_MASTER_TOKEN }}", "status": "$STATUS" }'
      HMAC_SECRET: "secret_puzzletime_sentence_to_sign_everything"

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: 'Set up Ruby 2.5'
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.5'

    - name: 'Build and test with Rake'
      env:
        RAILS_TEST_DB_NAME: 'postgres'
        RAILS_TEST_DB_USERNAME: 'postgres'
        RAILS_TEST_DB_PASSWORD: 'postgres'
        RAILS_ENV: 'test'
      run: |
        sudo apt-get -yqq install libpq-dev
        gem install bundler --version '~> 2'
        bundle install --jobs 4 --retry 3
        bundle exec rails db:create
        bundle exec rails db:migrate
        bundle exec rails test

    - name: Status Update Success 
      uses: wei/curl@v1.1.1
      if: success()
      env:
        STATUS: ok
      with:
        args: "-X POST ${{ env.REQUEST_URI }} -d application=${{ secrets.STATUS_MASTER_APPLICATION}} -d token=${{ secrets.STATUS_MASTER_TOKEN }} -d status=${{ env.STATUS }}"

    - name: Status Update Failure
      uses: wei/curl@v1.1.1
      if: cancelled()
      env:
        STATUS: fail
      with:
        args: "-X POST ${{ env.REQUEST_URI }} -d application=${{ secrets.STATUS_MASTER_APPLICATION}} -d token=${{ secrets.STATUS_MASTER_TOKEN }} -d status=${{ env.STATUS }}"

